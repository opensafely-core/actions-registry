---
name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Python
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          set -xe
          python -m pip install --upgrade pip
          python -m venv venv
          venv/bin/pip install --progress-bar=off --require-hashes --requirement requirements.dev.txt

      - name: Cache the venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.dev.txt') }}

      # Node.js
      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install node_modules
        run: npm install

      - name: Build assets
        run: npm run build

      - name: Store assets
        uses: actions/upload-artifact@v2
        with:
          name: node-assets
          path: static/dist

  check:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - uses: extractions/setup-just@v1
      - name: Check formatting, linting and import sorting
        run: just check

  test:
    needs: [build, check]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt', 'requirements.dev.txt') }}
      - name: Retrieve assets
        uses: actions/download-artifact@v2
        with:
          name: node-assets
          path: static/dist
      - name: Run tests
        env:
          SECRET_KEY: 12345
        run: |
          just test

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          failure-threshold: error

  deploy:
    needs: [test, lint-dockerfile]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Deploy to dokku
        uses: opensafely-core/dokku-deploy-github-action@4b326b36625e4a10add5f9601e8ffbaf048444b9
        with:
          app-name: "actions-registry"
          dokku-host: "dokku2.ebmdatalab.net"
          ssh-private-key: ${{ secrets.DOKKU2_DEPLOY_SSH_KEY }}
          remote-branch: "main"
