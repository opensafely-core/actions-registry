---
name: CI

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm

      - name: Install node_modules
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Store assets
        uses: actions/upload-artifact@v2
        with:
          name: node-assets
          path: assets/dist

  check:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements.*.txt
      - uses: extractions/setup-just@v1
      - name: Check formatting, linting and import sorting
        run: just check

  test:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements.*.txt
      - name: Retrieve assets
        uses: actions/download-artifact@v3
        with:
          name: node-assets
          path: assets/dist
      - name: Run tests
        env:
          SECRET_KEY: 12345
        run: just test

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183  # v2.1.0
        with:
          failure-threshold: error
          dockerfile: docker/Dockerfile

  docker-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@aa5d15c144db4585980a44ebfdd2cf337c4f14cb  # v1.4.0

      - name: Build docker image and run tests in it
        run: |
          # build docker and run test
          just docker-test

  deploy:
    needs: [check, test, docker-test, lint-dockerfile]

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    concurrency: deploy-production

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Deploy to dokku
        uses: opensafely-core/dokku-deploy-github-action@4b326b36625e4a10add5f9601e8ffbaf048444b9
        with:
          app-name: "actions-registry"
          dokku-host: "dokku2.ebmdatalab.net"
          ssh-private-key: ${{ secrets.DOKKU2_DEPLOY_SSH_KEY }}
          remote-branch: "main"
